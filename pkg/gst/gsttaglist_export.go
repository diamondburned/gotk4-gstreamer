// Code generated by girgen. DO NOT EDIT.

package gst

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
)

// #include <stdlib.h>
// #include <gst/gst.h>
import "C"

//export _gotk4_gst1_TagForEachFunc
func _gotk4_gst1_TagForEachFunc(arg1 *C.GstTagList, arg2 *C.gchar, arg3 C.gpointer) {
	var fn TagForEachFunc
	{
		v := gbox.Get(uintptr(arg3))
		if v == nil {
			panic(`callback not found`)
		}
		fn = v.(TagForEachFunc)
	}

	var _list *TagList // out
	var _tag string    // out

	_list = (*TagList)(gextras.NewStructNative(unsafe.Pointer(arg1)))
	_tag = C.GoString((*C.gchar)(unsafe.Pointer(arg2)))

	fn(_list, _tag)
}
