// Code generated by girgen. DO NOT EDIT.

package gstpbutils

import (
	"runtime"
	"unsafe"

	"github.com/OmegaRogue/gotk4-gstreamer/pkg/gst"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
)

// #include <stdlib.h>
// #include <gst/pbutils/pbutils.h>
import "C"

// CodecUtilsCapsFromMIMECodec converts a RFC 6381 compatible codec string to
// Caps. More than one codec string can be present (separated by ,).
//
// Registered codecs can be found at http://mp4ra.org/#/codecs.
//
// The function takes the following parameters:
//
//   - codecsField: mime codec string field.
//
// The function returns the following values:
//
//   - caps (optional): corresponding Caps or NULL.
//
func CodecUtilsCapsFromMIMECodec(codecsField string) *gst.Caps {
	var _arg1 *C.gchar   // out
	var _cret *C.GstCaps // in

	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(codecsField)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.gst_codec_utils_caps_from_mime_codec(_arg1)
	runtime.KeepAlive(codecsField)

	var _caps *gst.Caps // out

	if _cret != nil {
		_caps = (*gst.Caps)(gextras.NewStructNative(unsafe.Pointer(_cret)))
		runtime.SetFinalizer(
			gextras.StructIntern(unsafe.Pointer(_caps)),
			func(intern *struct{ C unsafe.Pointer }) {
				C.free(intern.C)
			},
		)
	}

	return _caps
}
