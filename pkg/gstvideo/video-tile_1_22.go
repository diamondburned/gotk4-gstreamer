// Code generated by girgen. DO NOT EDIT.

package gstvideo

// #include <stdlib.h>
// #include <gst/video/video.h>
import "C"

// VideoTileInfo: description of a tile. This structure allow to describe
// arbitrary tile dimensions and sizes.
//
// An instance of this type is always passed by reference.
type VideoTileInfo struct {
	*videoTileInfo
}

// videoTileInfo is the struct that's finalized.
type videoTileInfo struct {
	native *C.GstVideoTileInfo
}

// Width: width in pixels of a tile. This value can be zero if the number of
// pixels per line is not an integer value.
func (v *VideoTileInfo) Width() uint {
	valptr := &v.native.width
	var _v uint // out
	_v = uint(*valptr)
	return _v
}

func (v *VideoTileInfo) Height() uint {
	valptr := &v.native.height
	var _v uint // out
	_v = uint(*valptr)
	return _v
}

// Stride: stride (in bytes) of a tile line. Regardless if the tile have
// sub-tiles this stride multiplied by the height should be equal to
// VideoTileInfo.size. This value is used to translate into linear stride when
// older APIs are being used to expose this format.
func (v *VideoTileInfo) Stride() uint {
	valptr := &v.native.stride
	var _v uint // out
	_v = uint(*valptr)
	return _v
}

// Size: size in bytes of a tile. This value must be divisible by
// VideoTileInfo.stride.
func (v *VideoTileInfo) Size() uint {
	valptr := &v.native.size
	var _v uint // out
	_v = uint(*valptr)
	return _v
}

// Width: width in pixels of a tile. This value can be zero if the number of
// pixels per line is not an integer value.
func (v *VideoTileInfo) SetWidth(width uint) {
	valptr := &v.native.width
	*valptr = C.guint(width)
}

func (v *VideoTileInfo) SetHeight(height uint) {
	valptr := &v.native.height
	*valptr = C.guint(height)
}

// Stride: stride (in bytes) of a tile line. Regardless if the tile have
// sub-tiles this stride multiplied by the height should be equal to
// VideoTileInfo.size. This value is used to translate into linear stride when
// older APIs are being used to expose this format.
func (v *VideoTileInfo) SetStride(stride uint) {
	valptr := &v.native.stride
	*valptr = C.guint(stride)
}

// Size: size in bytes of a tile. This value must be divisible by
// VideoTileInfo.stride.
func (v *VideoTileInfo) SetSize(size uint) {
	valptr := &v.native.size
	*valptr = C.guint(size)
}
